//
//  LocalCityVC.m
//  MFSC
//
//  Created by mfwl on 16/3/7.
//  Copyright ¬© 2016Âπ¥ mfwl. All rights reserved.
//

#import "LocalCityVC.h"

@interface LocalCityVC () <UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate>

@property (strong, nonatomic) IBOutlet UISearchBar *searchCityTF;
@property (strong, nonatomic) IBOutlet UITableView *showCityList;


@property (nonatomic, copy) NSString *localCity;
@property (nonatomic, strong) NSMutableDictionary *cities;
@property (nonatomic, strong) NSMutableArray *keys;
@property (nonatomic, strong) NSMutableArray *arrayCitys;
@property (nonatomic, strong) NSMutableArray *arrayHotCity;
@property (nonatomic, strong) NSMutableArray *positCityArr;
@property (nonatomic, strong) NSMutableArray *allCities;



@property (nonatomic, strong) NSMutableDictionary *resultDic;
@property (nonatomic, strong) NSMutableDictionary *newsDic;

@property (nonatomic, assign) NSInteger tempNum;
@property (nonatomic, strong) NSMutableArray *resultArr;
@property (nonatomic, strong) NSArray *tempArr;




@end

@implementation LocalCityVC

- (void)dealloc {
    _searchCityTF.delegate = nil;
    _showCityList.delegate = nil;
    _showCityList.dataSource = nil;
}


- (instancetype)init
{
    self = [super init];
    if (self) {
        self.tempNum = 0;
        self.showCityList.delegate = self;
        self.showCityList.dataSource = self;
        self.arrayHotCity = [NSMutableArray arrayWithObjects:@"ÂπøÂ∑û", @"ÊàêÈÉΩ", @"‰∏äÊµ∑", @"Âåó‰∫¨", @"Ê∑±Âú≥", nil];
    
        self.positCityArr = [NSMutableArray arrayWithObjects:@"51È∫¶‰∏∞", nil];
        self.keys = [NSMutableArray arrayWithCapacity:0];
        self.arrayCitys = [NSMutableArray arrayWithCapacity:0];
        self.showCityList.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
        self.allCities = [NSMutableArray arrayWithCapacity:0];
        self.searchCityTF.delegate = self;
        [self cityInfoHandle];
        self.showCityList.sectionIndexBackgroundColor = [UIColor clearColor];
        self.showCityList.sectionIndexColor = THEMECOLOR;
    }
    return self;
}


- (void)localCityHandle {
    [HTTPTOOL GETLocalCityWithURL:@"http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js" withBody:nil withHttpHead:nil responseStyle:JSON withSuccess:^(id result) {
        
        NSString *temResult = [[NSString alloc] initWithData:result  encoding:NSUTF8StringEncoding];
        if (temResult.length == 0) {
            return ;
        }
        temResult = [temResult substringFromIndex:21];
        temResult = [temResult substringToIndex:temResult.length - 1];
        NSData *xmlData = [temResult dataUsingEncoding:NSUTF8StringEncoding];
        id results = [NSJSONSerialization JSONObjectWithData:xmlData options:NSJSONReadingMutableContainers error:nil];
        self.localCity = results[@"city"];
        [self.showCityList reloadData];
    } withFail:^(id result) {
        
    }];
}

- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText {
    self.tempNum = searchText.length;
    NSString *search = @"üîç";
    NSPredicate *predicate = [NSPredicate predicateWithFormat:@"SELF contains [cd] %@",searchText];
    self.resultArr = [NSMutableArray arrayWithCapacity:0];
    self.keys = [NSMutableArray arrayWithCapacity:0];
    switch (searchText.length) {
        case 0: {
            [self cityInfoHandle];
        }
            break;
            
        case 1: {
            _resultArr = [self.cities objectForKey:[searchText uppercaseString]];
            if (_resultArr.count == 0) {
                _resultArr = (NSMutableArray *)[self.allCities filteredArrayUsingPredicate:predicate];
                if (_resultArr.count == 0) {
                    _resultArr = [NSMutableArray arrayWithObject:@"ÊöÇÊó†Áõ∏ÂÖ≥ÊêúÁ¥¢"];
                }
            }
            self.keys = [NSMutableArray arrayWithCapacity:0];
            [self.keys insertObject:search atIndex:0];
            self.newsDic = [NSMutableDictionary dictionaryWithCapacity:0];
            [self.newsDic setObject:_resultArr forKey:search];
        }
            break;
            
        default: {
            _resultArr = (NSMutableArray *)[self.allCities filteredArrayUsingPredicate:predicate];
            self.tempArr = [self.cities objectForKey:[[searchText substringWithRange:NSMakeRange(0, 1)] uppercaseString]];
            
            if (_resultArr.count == 0) {
                NSMutableArray *newArr = [NSMutableArray arrayWithCapacity:0];
                for (NSString *str in self.tempArr) {
                    NSString *strHan = str;
                    NSMutableString *strPinyin = [NSMutableString string];
                    for (NSInteger i = 0; i < strHan.length; i++) {
                        NSString *str1  = [strHan substringWithRange:NSMakeRange(i, 1)] ;
                        str1 = [str1 firstCharacterOfName];
                        [strPinyin appendString:str1];
                    }
                    if ([predicate evaluateWithObject:strPinyin]) {
                        [newArr addObject:str];
                    }
                }
                _resultArr = newArr;
                
            }
            
            if (_resultArr.count == 0) {
                NSMutableArray *newArr = [NSMutableArray arrayWithCapacity:0];
                for (NSString *str in self.tempArr) {
                    NSString *strHan = str;
                    NSMutableString *strPinyin = [NSMutableString string];
                    for (NSInteger i = 0; i < strHan.length; i++) {
                        NSString *str1  = [strHan substringWithRange:NSMakeRange(i, 1)] ;
                        str1 = [str1 pinyinOfName];
                        [strPinyin appendString:str1];
                    }
                    if ([predicate evaluateWithObject:strPinyin]) {
                        [newArr addObject:str];
                    }
                }
                _resultArr = newArr;
            }
            self.keys = [NSMutableArray arrayWithCapacity:0];
            [self.keys insertObject:search atIndex:0];
            self.newsDic = [NSMutableDictionary dictionaryWithCapacity:0];
            [self.newsDic setObject:_resultArr forKey:search];

        }
            break;
    }
    [self.showCityList reloadData];
    
}



#pragma mark - get data
- (void)cityInfoHandle {
    self.cities = @{
                    @"A" : @[@"ÂÆâÂ∫Ü", @"ÂÆâÈ°∫", @"ÂÆâÈò≥", @"ÈòøÊãâÂñÑÁõü", @"ÈûçÂ±±", @"ÈòøÂùù", @"ÈòøÈáå", @"ÈòøÂÖãËãè", @"ÈòøÂãíÊ≥∞", @"ÂÆâÂ∫∑"],
                    @"B" : @[@"Âåó‰∫¨", @"ËöåÂü†", @"ÊØ´Â∑û", @"ÁôΩÈì∂", @"ÂåóÊµ∑", @"ÁôæËâ≤", @"ÊØïËäÇ", @"‰øùÂÆö", @"ÂåÖÂ§¥", @"Â∑¥ÂΩ¶Ê∑ñÂ∞îÁõü", @"ÁôΩÂ±±", @"Êú¨Ê∫™", @"Êª®Â∑û", @"Â∑¥‰∏≠", @"ÂçöÂ∞îÂ°îÊãâ", @"Â∑¥Èü≥ÈÉ≠Ê•û", @"‰øùÂ±±", @"ÂÆùÈ∏°"],
                    @"C" : @[@"ÊàêÈÉΩ",@"Â∏∏Â∑û", @"ÈáçÂ∫Ü", @"ÊªÅÂ∑û", @"Â∑¢Êπñ", @"Ê±†Â∑û", @"ÊΩÆÂ∑û", @"Â¥áÂ∑¶", @"ÊâøÂæ∑", @"Ê≤ßÂ∑û", @"Â∏∏Âæ∑", @"ÈÉ¥Â∑û", @"Ëµ§Â≥∞", @"ÊúùÈò≥", @"ÊòåÈÉΩ", @"ÊòåÂêâ", @"Ê•öÈõÑ", @"Â§ßÁêÜ"],
                    @"D" : @[@"ÂÆöË•ø", @"‰∏úËéû", @"Â§ßÂ∫Ü", @"Â§ßÂÖ¥ÂÆâÂ≤≠", @"Â§ßËøû", @"‰∏π‰∏ú", @"Â§ßÂêå", @"‰∏úËê•", @"Âæ∑Â∑û", @"Âæ∑Èò≥", @"ËææÂ∑û", @"Âæ∑ÂÆè", @"Ëø™Â∫Ü"],
                    @"E" : @[@"ÈÑÇÂ∑û", @"ÊÅ©ÊñΩÂúüÂÆ∂ÊóèËãóÊóèËá™Ê≤ªÂ∑û", @"ÈÑÇÂ∞îÂ§öÊñØ"],
                    @"F" : @[@"Á¶èÂ∑û", @"‰ΩõÂ±±", @"ÈòúÈò≥", @"Èò≤ÂüéÊ∏Ø", @"ÊäöÂ∑û", @"ÊäöÈ°∫", @"ÈòúÊñ∞"],
                    @"G" : @[@"ÂπøÂ∑û", @"Ë¥µÈò≥", @"Ê°ÇÊûó", @"ÁîòÂçó", @"Ë¥µÊ∏Ø", @"Ëµ£Â∑û", @"Âõ∫Âéü", @"ÊûúÊ¥õ", @"ÂπøÂÖÉ", @"ÂπøÂÆâ", @"ÁîòÂ≠ú"],
                    @"H" : @[@"Êù≠Â∑û", @"ÂêàËÇ•", @"Êµ∑Âè£", @"Ê∑ÆÂçó", @"Ê∑ÆÂåó", @"ÈªÑÂ±±", @"ÊÉ†Â∑û", @"Ê≤≥Ê∫ê", @"Ë¥∫Â∑û", @"Ê≤≥Ê±†", @"ÈÇØÈÉ∏", @"Ë°°Ê∞¥", @"ÂìàÂ∞îÊª®", @"Èπ§Â≤ó", @"ÈªëÊ≤≥", @"Èπ§Â£Å", @"ÈªÑÁü≥", @"ÈªÑÂÜà", @"Ë°°Èò≥", @"ÊÄÄÂåñ", @"ÂëºÂíåÊµ©Áâπ", @"Âëº‰º¶Ë¥ùÂ∞î", @"Ê∑ÆÂÆâ", @"Ëë´Ëä¶Â≤õ", @"Êµ∑‰∏ú", @"Êµ∑Âåó", @"ÈªÑÂçó", @"Êµ∑Ë•ø", @"ËèèÊ≥Ω", @"ÂìàÂØÜ", @"ÂíåÁî∞", @"Á∫¢Ê≤≥", @"ÊπñÂ∑û", @"Ê±â‰∏≠"],
                    @"J" : @[@"ÊµéÂçó", @"ÂòâÂÖ¥", @"ÂòâÂ≥™ÂÖ≥", @"ÈáëÊòå", @"ÈÖíÊ≥â", @"Ê±üÈó®", @"Êè≠Èò≥", @"È∏°Ë•ø", @"‰Ω≥Êú®ÊñØ", @"ÁÑ¶‰Ωú", @"ÊµéÊ∫ê", @"ËçÜÈó®", @"ËçÜÂ∑û", @"ÊôØÂæ∑Èïá", @"‰πùÊ±ü", @"ÂêâÂÆâ", @"ÂêâÊûóÂ∏Ç", @"Èî¶Â∑û", @"ÊôãÂüé", @"Êôã‰∏≠", @"ÊµéÂÆÅ", @"ÈáëÂçé"],
                    @"K" : @[@"ÊòÜÊòé", @"ÂºÄÂ∞Å", @"ÂÖãÊãâÁéõ‰æù", @"ÂÖãÂ≠úÂãíËãè", @"ÂñÄ‰ªÄ"],
                    @"L" : @[@"Ê¥õÈò≥", @"Êü≥Â∑û", @"Ëøû‰∫ëÊ∏Ø", @"ÂÖ≠ÂÆâ", @"ÈæôÂ≤©", @"ÂÖ∞Â∑û", @"ÈôáÂçó", @"‰∏¥Â§è", @"Êù•ÂÆæ", @"ÂÖ≠ÁõòÊ∞¥", @"ÂªäÂùä", @"ÊºØÊ≤≥", @"Â®ÑÂ∫ï", @"ËæΩÊ∫ê", @"ËæΩÈò≥", @"‰∏¥Ê±æ", @"ÂêïÊ¢Å", @"Ëé±Ëäú", @"‰∏¥Ê≤Ç", @"ËÅäÂüé", @"Ê≥∏Â∑û", @"‰πêÂ±±", @"ÂáâÂ±±", @"ÊãâËê®", @"ÊûóËäù", @"‰∏ΩÊ±ü", @"‰∏¥Ê≤ß", @"‰∏ΩÊ∞¥"],
                    @"M" : @[@"È©¨ÈûçÂ±±", @"ËåÇÂêç", @"Ê¢ÖÂ∑û", @"Áâ°‰∏πÊ±ü", @"ÁªµÈò≥", @"ÁúâÂ±±"],
                    @"N" : @[@"Âçó‰∫¨", @"ÂÆÅÊ≥¢", @"ÂçóÂÆÅ", @"ÂçóÈÄö", @"ÂçóÂπ≥", @"ÂÆÅÂæ∑", @"ÂçóÈò≥", @"ÂçóÊòå", @"ÂÜÖÊ±ü", @"ÂçóÂÖÖ", @"ÈÇ£Êõ≤", @"ÊÄíÊ±ü"],
                    @"P" : @[@"ËéÜÁî∞", @"Âπ≥Âáâ", @"Âπ≥È°∂Â±±", @"ÊøÆÈò≥", @"Ëêç‰π°", @"ÁõòÈî¶", @"ÊîÄÊûùËä±"],
                    @"Q" : @[@"ÈùíÂ≤õ", @"Ê≥âÂ∑û", @"Â∫ÜÈò≥", @"Ê∏ÖËøú", @"Èí¶Â∑û", @"ÈªîË•øÂçó", @"Èªî‰∏úÂçó", @"ÈªîÂçó", @"Áß¶ÁöáÂ≤õ" ,@"ÈΩêÈΩêÂìàÂ∞î", @"‰∏ÉÂè∞Ê≤≥", @"ÊΩúÊ±ü", @"Êõ≤Èùñ", @"Ë°¢Â∑û"],
                    @"R" : @[@"Êó•ÁÖß", @"Êó•ÂñÄÂàô"],
                    @"S" : @[@"Ê∑±Âú≥", @"‰∏äÊµ∑", @"Ê∑±Âú≥", @"ËãèÂ∑û", @"Âé¶Èó®", @"‰∏â‰∫ö", @"ÂÆøÂ∑û", @"‰∏âÊòé", @"Èü∂ÂÖ≥", @"Ê±ïÂ§¥", @"Ê±ïÂ∞æ", @"‰∏âÊ≤ô", @"Áü≥ÂÆ∂Â∫Ñ", @"ÂèåÈ∏≠Â±±", @"Áª•Âåñ", @"‰∏âÈó®Â≥°", @"ÂïÜ‰∏ò", @"ÂçÅÂ†∞", @"ÈöèÂ∑û", @"Á•ûÂÜúÊû∂", @"ÈÇµÈò≥", @"ÂÆøËøÅ", @"‰∏äÈ•∂", @"ÂõõÂπ≥", @"ÊùæÂéü", @"Ê≤àÈò≥", @"Áü≥Âò¥Â±±", @"ÊúîÂ∑û", @"ÈÅÇÂÆÅ", @"Â±±Âçó", @"Áü≥Ê≤≥Â≠ê", @"ÊÄùËåÖ", @"ÁªçÂÖ¥", @"ÂïÜÊ¥õ"],
                    @"T" : @[@"Â§©Ê¥•", @"ÈìúÈôµ", @"Â§©Ê∞¥", @"Èìú‰ªÅ", @"ÂîêÂ±±", @"Â§©Èó®", @"ÈÄöËæΩ", @"Ê≥∞Â∑û", @"ÈÄöÂåñ", @"ÈìÅÂ≤≠", @"Â§™Âéü", @"Ê≥∞ÂÆâ", @"ÂêêÈ≤ÅÁï™", @"Â°îÂüé", @"Âè∞Â∑û", @"ÈìúÂ∑ù"],
                    @"W" : @[@"ËäúÊπñ", @"Ê≠¶Â®Å", @"Ê¢ßÂ∑û", @"‰πåÊµ∑", @"‰πåÂÖ∞ÂØüÂ∏ÉÁõü", @"Êó†Èî°", @"Âê¥Âø†", @"ÊΩçÂùä", @"Â®ÅÊµ∑", @"‰πåÈ≤ÅÊú®ÈΩê", @"ÊñáÂ±±", @"Ê∏©Â∑û", @"Ê∏≠Âçó"],
                    @"X" : @[@"Ë•øÂÆâ", @"ÂæêÂ∑û", @"ÂÆ£Âüé", @"ÈÇ¢Âè∞", @"Êñ∞‰π°", @"ËÆ∏Êòå", @"‰ø°Èò≥", @"Ë•ÑÈò≥", @"Â≠ùÊÑü", @"Âí∏ÂÆÅ", @"‰ªôÊ°É", @"ÊπòÊΩ≠", @"Ë•ø‰π°ÂúüÂÆ∂ÊóèËãóÊóèËá™Ê≤ªÂ∑û", @"ÂÖ¥ÂÆâÁõü", @"Èî°ÊûóÈÉ≠ÂãíÁõü", @"Êñ∞‰Ωô", @"Ë•øÂÆÅ", @"ÂøªÂ∑û", @"Ë•øÂèåÁâàÁ∫≥", @"Âí∏Èò≥"],
                    @"Y" : @[@"Èò≥Ê±ü", @"‰∫ëÊµÆ", @"ÁéâÊûó", @"‰ºäÊò•", @"ÂÆúÊòå", @"Â≤≥Èò≥", @"ÁõäÈò≥", @"Ê∞∏Â∑û", @"ÁõêÂüé", @"Êâ¨Â∑û", @"Èπ∞ÊΩ≠", @"ÂÆúÊò•", @"Âª∂Ëæπ", @"Ëê•Âè£", @"Èì∂Â∑ù", @"ÁéâÊ†ë", @"Èò≥Ê≥â", @"ËøêÂüé", @"ÁÉüÂè∞", @"ÂÆúÂÆæ", @"ÈõÖÂÆâ", @"‰ºäÁäÅ", @"ÁéâÊ∫™", @"Âª∂ÂÆâ", @"Ê¶ÜÊûó"],
                    @"Z" : @[@"Áè†Êµ∑", @"‰∏≠Â±±", @"Êº≥Â∑û", @"Âº†Êéñ", @"ÊπõÊ±ü", @"ËÇáÂ∫Ü", @"ÈÅµ‰πâ", @"Âº†ÂÆ∂Âè£", @"ÈÉëÂ∑û", @"Âë®Âè£", @"È©ªÈ©¨Â∫ó", @"ÈïøÊ≤ô", @"Ê†™Ê¥≤", @"Âº†ÂÆ∂Áïå", @"ÈïáÊ±ü", @"ÈïøÊò•", @"‰∏≠Âç´", @"ÈïøÊ≤ª", @"Ê∑ÑÂçö", @"Êû£Â∫Ñ", @"Ëá™Ë¥°", @"ËµÑÈò≥", @"Êò≠ÈÄö", @"ËàüÂ±±"]
                    }.mutableCopy;
    [self.keys addObjectsFromArray:[[self.cities allKeys] sortedArrayUsingSelector:@selector(compare:)]];
    /* Ê∑ªÂä†ÁÉ≠Èó®ÂüéÂ∏Ç */
    NSString *strHot = @"#";
    NSString *posit =@"&";
    [self.keys insertObject:posit atIndex:0];
    [self.keys insertObject:strHot atIndex:1];
    [self.cities setObject:_arrayHotCity forKey:strHot];
    [self.cities setObject:self.positCityArr forKey:posit];
    for (NSString *key in self.cities) {
        NSArray *arr = self.cities[key];
        for (NSString *str in arr) {
            [self.allCities addObject:str];
        }
    }
}


- (void)viewWillAppear:(BOOL)animated {
    self.tabBarController.tabBar.hidden = YES;
}




- (IBAction)back:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}


- (void)viewDidLoad {
    [super viewDidLoad];
    self.automaticallyAdjustsScrollViewInsets = NO;
    [self localCityHandle];
    

}



- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return self.keys.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    switch (self.tempNum) {
        case 0: {
            NSString *key = [_keys objectAtIndex:section];
            NSArray *citySection = [_cities objectForKey:key];
            return [citySection count];
        }
            break;
            
        default: {
            return _resultArr.count;
        }
            break;
    }
   
}



- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    switch (self.tempNum) {
        case 0:
            switch (indexPath.section) {
                case 0: {
                    static NSString *TableSampleIdentifier = @"TableSampleIdentifier";
                    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:
                                             TableSampleIdentifier];
                    if (cell == nil) {
                        cell = [[UITableViewCell alloc]
                                initWithStyle:UITableViewCellStyleDefault
                                reuseIdentifier:TableSampleIdentifier];
                    }
                    if (self.localCity.length == 0) {
                        cell.textLabel.text = @"ÂÆö‰Ωç‰∏≠...";
                    } else {
                        cell.textLabel.text = self.localCity;
                        cell.textLabel.textColor = THEMECOLOR;
                    }
                    return cell;
                }
                    break;
                    
                    
                default: {
                    static NSString *ordinaryCell = @"ordinaryCell";
                    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:ordinaryCell];
                    if (cell == nil) {
                        cell = [[UITableViewCell alloc]
                                initWithStyle:UITableViewCellStyleDefault
                                reuseIdentifier:ordinaryCell];
                    }
                    cell.textLabel.textColor = [UIColor colorWithRed:20 / 255.0 green:20 / 255.0 blue:20 / 255.0 alpha:1.0f];
                    if (indexPath.section == 1) {
                        cell.textLabel.textColor = [UIColor  redColor];
                    }
                    cell.textLabel.text = [[_cities objectForKey:[_keys objectAtIndex:indexPath.section]] objectAtIndex:indexPath.row];
                    
                    return cell;
                }
                    break;
            }

            break;
            
        default: {
            static NSString *ordinaryCell = @"resultCell";
            UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:ordinaryCell];
            if (cell == nil) {
                cell = [[UITableViewCell alloc]
                        initWithStyle:UITableViewCellStyleDefault
                        reuseIdentifier:ordinaryCell];
            }
            cell.textLabel.textColor = [UIColor colorWithRed:20 / 255.0 green:20 / 255.0 blue:20 / 255.0 alpha:1.0f];
            cell.textLabel.text = [[_newsDic objectForKey:@"üîç"] objectAtIndex:indexPath.row];
            if ([cell.textLabel.text isEqualToString:@"ÊöÇÊó†Áõ∏ÂÖ≥ÊêúÁ¥¢"]) {
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
            }
            return cell;
        }
            break;
    }
}


#pragma mark - tableView
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 20.0;
}



- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    UIView *bgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 20)];
    bgView.backgroundColor = [UIColor colorWithRed:201 / 255.0 green:201 / 255.0 blue:206 / 255.0 alpha:1.0f];
    
    UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(13, 0, 250, 20)];
    titleLabel.backgroundColor = [UIColor clearColor];
    titleLabel.textColor = [UIColor colorWithRed:60 /255.0 green:60 / 255.0 blue:60 / 255.0 alpha:1.0];
    titleLabel.font = [UIFont systemFontOfSize:12];
    
    NSString *key = [_keys objectAtIndex:section];
    if ([key rangeOfString:@"#"].location != NSNotFound) {
        titleLabel.text = @"ÁÉ≠Èó®ÂüéÂ∏Ç";
    } else if ([key rangeOfString:@"&"].location != NSNotFound) {
        titleLabel.text = @"ÂÆö‰ΩçÂΩìÂâçÂüéÂ∏Ç";
    } else {
        titleLabel.text = key;
    }
    
    [bgView addSubview:titleLabel];
    
    return bgView;
}



- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView {
    return _keys;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    [self.navigationController popViewControllerAnimated:YES];
#warning Â∏∏‰ΩèÂú∞ÂèëÈÄÅÂà∞ÊúçÂä°Âô®

    
}











- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
